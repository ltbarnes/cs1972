Project: Platformer 4
Student: Logan Barnes (ltbarnes)


COMPILED USING QT 5.2.0!!!

Game Requirements
========================================
[ ] The game must have at least one type of enemy that uses path-finding over a navigation mesh
	### the game/platformer/entities/Racer class navigates the race path using a navmesh.
[ ] This enemy must interact with the player in some way (e.g. push the player off ledges, shoot at the player, damage the player directly)
	### the other racers race the player forcing win/loss conditions.
[ ] The game must have a non-arbitrary and reasonably achievable win or loss condition
	### win the race or lose the race. handled in the game/platformer/gamescreens/Gamescreen onTick() method.
[ ] The game must be resettable upon win or loss without restarting the program
	### press (almost) any key after the race.
[ ] The game can never enter an unwinnable or unloseable state
	### even if a player refuses to race the game will end after all other racers finish.
[ ] The game must use orthographic projection to display some form of game UI
	### arrows pointing to the next waypoint appear if the waypoint is out of the camera frustum. This is handled in the render2D method of game/platformer/gamescreens/Gamescreen.

	############## RETRY ADDITIONS ###############
	#
	#	- the racers can collide now allowing them to push each other off the edge of the course.
	# 	- this also forces the computer racers to recalculate their paths when they are pushed off course.
	# 	- the waypoint indicator is now projected directly above the current waypoint or points directly
	# 	  where it should be if it's off screen.
	#
	###############################################


Design:

	I focused more on making a ray tracing option for my graphics object and less on creating a super fun game. When using 'RAY' mode the engine simply renders a full screen quad and passes all the necessary game object info to the fragment shader. Modifying the fragment shader allows for cool effects like the water shown in the "graphics card destruction mode" of the game (mostly stolen from the shadertoy example "Seascape" at https://www.shadertoy.com/view/Ms2SD1).

Issues:

	- FPS prints to the console.
	- Compiled with Qt5.2.0


~Hours:
  30

